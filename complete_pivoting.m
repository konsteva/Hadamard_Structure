function [L,U,P,Q] = complete_pivoting(A)
  n = length(A(:,1)) ;
  L = zeros(n) ;
  U = zeros(n) ;
  P = eye(n) ;
  Q = eye(n) ;
  for k = 1:n
    % αποθηκευει το μεγαλυτερο στοιχειο καθε στηλης απο τη γραμμη και τη στηλη k και 
    % κατω με τη μορφη [στοιχειο, αριθμος γραμμης]
    [m_c,r] = max(abs(A(k:n,k:n)));
    % αποθηκευει το max των προηγουμενων στοιχειων
    % με τη μορφη [στοιχειο, αριθμος στηλης]
    [m,c] = max(m_c);
    r = r(c)+k-1; 
    c = c+k-1;
    %Εναλλαγες γραμμων
    A([k r],:) = A([r k],:);
    P([k r],:) = P([r k],:);
    L([k r],:) = L([r k],:);
    %Εναλλαγες στηλων
    A(:,[k c]) = A(:,[c k]);
    L(:,[k c]) = L(:,[c k]);
    Q(:,[k c]) = Q(:,[c k]);
    %Ελεγχος αν ο πινακας ειναι ιδιαζων
    if A(k,k) == 0
      fprintf('Matrix is singular. Cannot complete factorization') ;
      break
    end
    % Κατασκευαζουμε τον L διαιρωντας τα στοιχεια της στηλης k απο την
    % γραμμη k και κατω με το pivot
    format rat
    L(k:n,k) = A(k:n,k) / A(k,k);
    % Κατασκευαζουμε τον U κανοντας overwrite τις γραμμες του με τις 
    % μετασχηματισμενες του πινακα Α
    U(k,1:n) = A(k,1:n);
    %Μετασχηματισμος του Α
    A(k+1:n,1:n) = A(k+1:n,1:n) - L(k+1:n,k)*A(k,1:n);
  end
end
